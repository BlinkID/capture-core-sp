{"metadata":{"role":"symbol","externalID":"c:objc(cs)MBCCCaptureCoreSDK(im)setLicenseBuffer:andLicensee:errorCallback:","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setLicenseBuffer:andLicensee:errorCallback:"}],"title":"setLicenseBuffer:andLicensee:errorCallback:","navigatorTitle":[{"text":"setLicenseBuffer:andLicensee:errorCallback:","kind":"identifier"}],"symbolKind":"method","modules":[{"name":"CaptureCore"}],"roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Set license buffer and unlock the SDK. Also define licensee that will be used to validate the license."},{"type":"text","text":" "},{"type":"text","text":"This method can be used to unlock the SDK in library mode, i.e. when Microblink SDK is being"},{"text":" ","type":"text"},{"type":"text","text":"packaged inside 3rd party SDK. Unlocking Microblink SDK in library mode allows usage of"},{"text":" ","type":"text"},{"type":"text","text":"single license within multiple application packages."}],"sections":[],"variants":[{"paths":["\/documentation\/capturecore\/mbcccapturecoresdk\/setlicensebuffer:andlicensee:errorcallback:"],"traits":[{"interfaceLanguage":"occ"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"text":"setLicenseBuffer:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSData","preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"licenseBuffer","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"andLicensee:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSString","text":"NSString","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"licensee","kind":"internalParam"},{"kind":"text","text":" "},{"text":"errorCallback:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"void (^)(enum MBCCLicenseError)","preciseIdentifier":"c:BFv(#$@E@MBCCLicenseError)"},{"text":") ","kind":"text"},{"text":"errorCallback","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Byte array containing the license."}],"type":"paragraph"}],"name":"licenseBuffer"},{"content":[{"inlineContent":[{"type":"text","text":"Licensee to which license is given to."}],"type":"paragraph"}],"name":"licensee"},{"content":[{"inlineContent":[{"text":"A block that get executed when an issue with the license occurs. The only parameter represents the type of the issue.","type":"text"}],"type":"paragraph"}],"name":"errorCallback"}],"kind":"parameters"}],"identifier":{"url":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK\/setLicenseBuffer:andLicensee:errorCallback:","interfaceLanguage":"occ"},"hierarchy":{"paths":[["doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK"]]},"references":{"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCCaptureCoreSDK/setLicenseBuffer:andLicensee:errorCallback:":{"title":"setLicenseBuffer:andLicensee:errorCallback:","kind":"symbol","navigatorTitle":[{"text":"setLicenseBuffer:andLicensee:errorCallback:","kind":"identifier"}],"url":"\/documentation\/capturecore\/mbcccapturecoresdk\/setlicensebuffer:andlicensee:errorcallback:","abstract":[{"text":"Set license buffer and unlock the SDK. Also define licensee that will be used to validate the license.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This method can be used to unlock the SDK in library mode, i.e. when Microblink SDK is being"},{"text":" ","type":"text"},{"text":"packaged inside 3rd party SDK. Unlocking Microblink SDK in library mode allows usage of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"single license within multiple application packages."}],"role":"symbol","type":"topic","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"setLicenseBuffer:andLicensee:errorCallback:"}],"identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK\/setLicenseBuffer:andLicensee:errorCallback:"},"doc://com.microblink.CaptureCore/documentation/CaptureCore":{"role":"collection","url":"\/documentation\/capturecore","identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","type":"topic","kind":"symbol","abstract":[],"title":"CaptureCore"},"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCCaptureCoreSDK":{"abstract":[{"text":"Entry class for Capture SDK - used for setting up license key and to add support for","type":"text"},{"text":" ","type":"text"},{"text":"optimisation of passing data.","type":"text"}],"type":"topic","fragments":[{"text":"MBCCCaptureCoreSDK","kind":"identifier"}],"url":"\/documentation\/capturecore\/mbcccapturecoresdk","role":"symbol","kind":"symbol","title":"MBCCCaptureCoreSDK","identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK"}}}