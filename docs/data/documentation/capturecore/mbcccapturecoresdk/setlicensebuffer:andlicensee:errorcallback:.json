{"identifier":{"url":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK\/setLicenseBuffer:andLicensee:errorCallback:","interfaceLanguage":"occ"},"variants":[{"paths":["\/documentation\/capturecore\/mbcccapturecoresdk\/setlicensebuffer:andlicensee:errorcallback:"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"setLicenseBuffer:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSData","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSData"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"licenseBuffer"},{"kind":"text","text":" "},{"kind":"identifier","text":"andLicensee:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSString","text":"NSString","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"licensee","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCallback:"},{"kind":"text","text":"("},{"text":"void (^)(enum MBCCLicenseError)","kind":"typeIdentifier","preciseIdentifier":"c:BFv(#$@E@MBCCLicenseError)"},{"kind":"text","text":") "},{"kind":"internalParam","text":"errorCallback"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"licenseBuffer","content":[{"inlineContent":[{"type":"text","text":"Byte array containing the license."}],"type":"paragraph"}]},{"name":"licensee","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Licensee to which license is given to."}]}]},{"name":"errorCallback","content":[{"inlineContent":[{"type":"text","text":"A block that get executed when an issue with the license occurs. The only parameter represents the type of the issue."}],"type":"paragraph"}]}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK"]]},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"CaptureCore"}],"symbolKind":"method","navigatorTitle":[{"kind":"identifier","text":"setLicenseBuffer:andLicensee:errorCallback:"}],"title":"setLicenseBuffer:andLicensee:errorCallback:","externalID":"c:objc(cs)MBCCCaptureCoreSDK(im)setLicenseBuffer:andLicensee:errorCallback:","role":"symbol","fragments":[{"kind":"text","text":"- "},{"text":"setLicenseBuffer:andLicensee:errorCallback:","kind":"identifier"}]},"abstract":[{"text":"Set license buffer and unlock the SDK. Also define licensee that will be used to validate the license.","type":"text"},{"type":"text","text":" "},{"text":"This method can be used to unlock the SDK in library mode, i.e. when Microblink SDK is being","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"packaged inside 3rd party SDK. Unlocking Microblink SDK in library mode allows usage of"},{"type":"text","text":" "},{"text":"single license within multiple application packages.","type":"text"}],"references":{"doc://com.microblink.CaptureCore/documentation/CaptureCore":{"identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","abstract":[],"url":"\/documentation\/capturecore","role":"collection","title":"CaptureCore","kind":"symbol","type":"topic"},"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCCaptureCoreSDK/setLicenseBuffer:andLicensee:errorCallback:":{"identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK\/setLicenseBuffer:andLicensee:errorCallback:","role":"symbol","fragments":[{"kind":"text","text":"- "},{"text":"setLicenseBuffer:andLicensee:errorCallback:","kind":"identifier"}],"title":"setLicenseBuffer:andLicensee:errorCallback:","url":"\/documentation\/capturecore\/mbcccapturecoresdk\/setlicensebuffer:andlicensee:errorcallback:","navigatorTitle":[{"kind":"identifier","text":"setLicenseBuffer:andLicensee:errorCallback:"}],"kind":"symbol","abstract":[{"type":"text","text":"Set license buffer and unlock the SDK. Also define licensee that will be used to validate the license."},{"type":"text","text":" "},{"type":"text","text":"This method can be used to unlock the SDK in library mode, i.e. when Microblink SDK is being"},{"type":"text","text":" "},{"type":"text","text":"packaged inside 3rd party SDK. Unlocking Microblink SDK in library mode allows usage of"},{"type":"text","text":" "},{"type":"text","text":"single license within multiple application packages."}],"type":"topic"},"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCCaptureCoreSDK":{"type":"topic","url":"\/documentation\/capturecore\/mbcccapturecoresdk","identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK","abstract":[{"text":"Entry class for Capture SDK - used for setting up license key and to add support for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"optimisation of passing data."}],"kind":"symbol","title":"MBCCCaptureCoreSDK","role":"symbol","fragments":[{"text":"MBCCCaptureCoreSDK","kind":"identifier"}]}}}