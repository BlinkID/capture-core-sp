{"abstract":[{"text":"Set the license file and unlock the SDK. Application package will be used to validate the license.","type":"text"}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK\/setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:"},"kind":"symbol","metadata":{"symbolKind":"method","navigatorTitle":[{"kind":"identifier","text":"setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:"}],"externalID":"c:objc(cs)MBCCCaptureCoreSDK(im)setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:","fragments":[{"kind":"text","text":"- "},{"text":"setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:","kind":"identifier"}],"role":"symbol","modules":[{"name":"CaptureCore"}],"roleHeading":"Instance Method","title":"setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:"},"hierarchy":{"paths":[["doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:v","kind":"typeIdentifier","text":"void"},{"kind":"text","text":") "},{"kind":"identifier","text":"setLicenseResource:"},{"text":"(","kind":"text"},{"text":"NSString","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSString"},{"text":" *) ","kind":"text"},{"text":"fileName","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withExtension:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSString","text":"NSString"},{"kind":"text","text":" *) "},{"text":"extension","kind":"internalParam"},{"kind":"text","text":" "},{"text":"inSubdirectory:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSString","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSString"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"subdirectory"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forBundle:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSBundle","preciseIdentifier":"c:objc(cs)NSBundle"},{"kind":"text","text":" *) "},{"text":"bundle","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"errorCallback:"},{"text":"(","kind":"text"},{"text":"void (^)(enum MBCCLicenseError)","kind":"typeIdentifier","preciseIdentifier":"c:BFv(#$@E@MBCCLicenseError)"},{"text":") ","kind":"text"},{"text":"errorCallback","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"fileName","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The name of resource file contained in the directory specified by subdirectory. If you specify nil, the method returns the first resource file it finds with the specified extension in that directory."}]}]},{"name":"extension","content":[{"type":"paragraph","inlineContent":[{"text":"The filename extension of the file (etc. txt). If you specify an empty string or nil, the extension is assumed not to exist and the file URL is the first file encountered that exactly matches name.","type":"text"}]}]},{"name":"subdirectory","content":[{"type":"paragraph","inlineContent":[{"text":"The valid path of top-level directory in which file is located inside bundle (etc. licenseFiles\/). If you specify an empty string or nil, root direcotry of bundle will be searched.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"NSBundle bundle required to access file.","type":"text"}]}],"name":"bundle"},{"name":"errorCallback","content":[{"inlineContent":[{"type":"text","text":"A block that get executed when an issue with the license occurs. The only parameter represents the type of the issue."}],"type":"paragraph"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/capturecore\/mbcccapturecoresdk\/setlicenseresource:withextension:insubdirectory:forbundle:errorcallback:"]}],"references":{"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCCaptureCoreSDK":{"type":"topic","kind":"symbol","url":"\/documentation\/capturecore\/mbcccapturecoresdk","role":"symbol","fragments":[{"kind":"identifier","text":"MBCCCaptureCoreSDK"}],"identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK","title":"MBCCCaptureCoreSDK","abstract":[{"type":"text","text":"Entry class for Capture SDK - used for setting up license key and to add support for"},{"type":"text","text":" "},{"type":"text","text":"optimisation of passing data."}]},"doc://com.microblink.CaptureCore/documentation/CaptureCore":{"role":"collection","identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","abstract":[],"kind":"symbol","title":"CaptureCore","url":"\/documentation\/capturecore","type":"topic"},"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCCaptureCoreSDK/setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:":{"url":"\/documentation\/capturecore\/mbcccapturecoresdk\/setlicenseresource:withextension:insubdirectory:forbundle:errorcallback:","abstract":[{"type":"text","text":"Set the license file and unlock the SDK. Application package will be used to validate the license."}],"title":"setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:"}],"navigatorTitle":[{"text":"setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK\/setLicenseResource:withExtension:inSubdirectory:forBundle:errorCallback:"}}}