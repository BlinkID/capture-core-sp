{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Method tries to finish capture of current side before the side capture acceptance critea has been met","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"which is performed as part of the "},{"type":"codeVoice","code":"analyze"},{"type":"text","text":" function call."}],"metadata":{"fragments":[{"text":"- ","kind":"text"},{"text":"finishSideCapture","kind":"identifier"}],"navigatorTitle":[{"text":"finishSideCapture","kind":"identifier"}],"role":"symbol","externalID":"c:objc(cs)MBCCAnalyzerRunner(im)finishSideCapture","title":"finishSideCapture","symbolKind":"method","modules":[{"name":"CaptureCore"}],"roleHeading":"Instance Method"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/capturecore\/mbccanalyzerrunner\/finishsidecapture"]}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCAnalyzerRunner\/finishSideCapture"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:v","text":"void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"finishSideCapture","kind":"identifier"},{"kind":"text","text":";"}],"languages":["occ"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Current ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCSideCaptureResult"},{"type":"text","text":" is filled with captured best frame, if there isn’t one method returns "},{"code":"false","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"otherwise "},{"code":"true","type":"codeVoice"},{"type":"text","text":", result is updated and analyzer transitions to next side capture if one exists through delegate’s method."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCAnalyzerRunner"]]},"references":{"doc://com.microblink.CaptureCore/documentation/CaptureCore":{"title":"CaptureCore","type":"topic","role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","url":"\/documentation\/capturecore"},"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCSideCaptureResult":{"type":"topic","kind":"symbol","url":"\/documentation\/capturecore\/mbccsidecaptureresult","identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCSideCaptureResult","title":"MBCCSideCaptureResult","abstract":[{"text":"Side capture result.","type":"text"}],"role":"symbol","fragments":[{"text":"MBCCSideCaptureResult","kind":"identifier"}]},"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCAnalyzerRunner/finishSideCapture":{"url":"\/documentation\/capturecore\/mbccanalyzerrunner\/finishsidecapture","title":"finishSideCapture","kind":"symbol","abstract":[{"text":"Method tries to finish capture of current side before the side capture acceptance critea has been met","type":"text"},{"type":"text","text":" "},{"text":"which is performed as part of the ","type":"text"},{"type":"codeVoice","code":"analyze"},{"type":"text","text":" function call."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"finishSideCapture"}],"identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCAnalyzerRunner\/finishSideCapture","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"finishSideCapture"}],"type":"topic"},"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCAnalyzerRunner":{"url":"\/documentation\/capturecore\/mbccanalyzerrunner","role":"symbol","fragments":[{"text":"MBCCAnalyzerRunner","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCAnalyzerRunner","title":"MBCCAnalyzerRunner","type":"topic","abstract":[{"text":"DirectAPI component responsible for image analysis and best frame capture.","type":"text"}]}}}